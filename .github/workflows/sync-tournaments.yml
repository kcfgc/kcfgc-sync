name: sync-tournaments
run-name: Sync Tournaments
on:
  workflow_call:
    inputs:
      TOURNAMENT_IDS:
        required: true
        type: string
    secrets:
      START_GG_API_KEY:
        required: true
      KCFGC_DEPLOY_KEY:
        required: true

jobs:
  extract:
    name: Extract Tournament Info
    runs-on: ubuntu-20.04
    env:
      START_GG_API_KEY: ${{ secrets.START_GG_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: npm run build
      - name: Extract
        run: node packages/start-gg/dist/index.js tournaments ${{ inputs.TOURNAMENT_IDS }} > output/start-gg-tournaments.json
      - name: Upload start.gg output
        uses: actions/upload-artifact@v3
        with:
          name: start-gg-tournaments.json
          path: output/start-gg-tournaments.json

  generate-website:
    name: Generate Website Files
    runs-on: ubuntu-20.04
    needs: extract
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: npm run build
      - name: Download start.gg output
        uses: actions/download-artifact@v3
        with:
          name: start-gg-tournaments.json
      - name: Generate website files
        run: node packages/website/dist/index.js --out-dir=./output < start-gg-tournaments.json
      - name: Upload website files output
        uses: actions/upload-artifact@v3
        with:
          name: website-files
          path: output/*.md

  upload-website:
    name: Upload Website Files
    runs-on: ubuntu-20.04
    needs: generate-website
    steps:
      - uses: actions/checkout@v3
        with:
          repository: kc-magic-pixel/kc-magic-pixel.github.io
          ssh-key: "${{ secrets.KCFGC_DEPLOY_KEY }}"
      - name: Download website files output
        uses: actions/download-artifact@v3
        with:
          name: website-files
          path: content/events
      - name: Stage changes
        run: |
          set +e
          git add content/events
          git diff --cached --exit-code
          exitcode="$?"
          echo "SHOULD_COMMIT=$exitcode" >> $GITHUB_ENV
          exit 0
      - name: Commit changes
        if: env.SHOULD_COMMIT == '1'
        run: |
          git config --global user.name 'KCMP Bot'
          git config --global user.email 'admin@kcmagicpixel.com'
          git commit -m "chore: automatic sync $(date +%F)"
          git push
